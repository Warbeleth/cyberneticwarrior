//////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	File : IBaseInterface.h
//
//	Author : Patrick Alvarez
//
//	Purpose : Basic Abstract Interface for In-Game Objects
//
//////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef IBASEINTERFACE_H_
#define IBASEINTERFACE_H_

class IBaseInterface
{
public:
	
	////////////////////////////////////////////////////////////////////////////////////
	//
	//	Function : ~IBaseInterface
	//
	//	Purpose : Abstract Pure Virtual Destructor for IBaseInterace. 
	//
	////////////////////////////////////////////////////////////////////////////////////
	virtual ~IBaseInterface(void) = 0 {}

	////////////////////////////////////////////////////////////////////////////////////
	//
	//	Function : Update
	//
	//	Purpose : Abstract Pure Virtual Update Function for IBaseInterface.
	//
	////////////////////////////////////////////////////////////////////////////////////
	virtual void Update(float fElapsedTime) = 0;

	////////////////////////////////////////////////////////////////////////////////////
	//
	//	Function : Render
	//
	//	Purpose : Abstract Pure Virtual Render Function for IBaseInterface.
	//
	////////////////////////////////////////////////////////////////////////////////////
	virtual void Render(void) = 0;

	////////////////////////////////////////////////////////////////////////////////////
	//
	//	Function : AddRef
	//
	//	Purpose : Abstract Pure Virtual Add Reference to RefCounter Function
	//			  for IBaseInterface.
	//
	////////////////////////////////////////////////////////////////////////////////////
	virtual void AddRef(void) = 0;

	////////////////////////////////////////////////////////////////////////////////////
	//
	//	Function : Release
	//
	//	Purpose : Abstract Pure Virtual Release Function for IBaseInterface.
	//
	////////////////////////////////////////////////////////////////////////////////////
	virtual void Release(void) = 0;
};


#endif