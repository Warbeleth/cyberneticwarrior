#include "CGameOverState.h"
#include "PrecompiledHeader.h"

#include "CStackStateMachine.h"
#include "CMainMenuState.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////
//				 ******************* CLASS - CGameOverState *******************
//////////////////////////////////////////////////////////////////////////////////////////////////////
CGameOverState* CGameOverState::sm_pGameOverStateInstance = NULL;

//////////////////////////////////////////////////////////////////////////////////////////////////////
// Function: “CGameOverState”
//////////////////////////////////////////////////////////////////////////////////////////////////////
CGameOverState::CGameOverState(void)
{
	// Atract Mode
	m_fAtractMode = 60.0f;
	m_fAtractModeTimer = 0.0f;
	m_bInput = false;

	// Background
	m_nBackgroundID		= -1;

}

//////////////////////////////////////////////////////////////////////////////////////////////////////
// Function: “~CGameOverState”
//////////////////////////////////////////////////////////////////////////////////////////////////////
CGameOverState::~CGameOverState(void)
{
}

//////////////////////////////////////////////////////////////////////////////////////////////////////
// Function: “Enter”
//////////////////////////////////////////////////////////////////////////////////////////////////////
void CGameOverState::Enter(void)
{
	m_pD3D	=	CSGD_Direct3D::GetInstance();
	m_pDI	=	CSGD_DirectInput::GetInstance();
	m_pTM	=	CSGD_TextureManager::GetInstance();
	m_pWM	=	CSGD_WaveManager::GetInstance();
	m_pDS	=	CSGD_DirectSound::GetInstance();

	m_GameOverFont.InitFont("resource/fonts/CyberneticWarriorChintzy.png", "resource/fonts/CyberneticWarriorChintzy.fnt", 64);
	m_nScrollingID = m_GameOverFont.AddScrolling( 0, 0 );

	m_nBackgroundID	= m_pTM->LoadTexture("resource/graphics/AchievementsBG.png");
}

//////////////////////////////////////////////////////////////////////////////////////////////////////
// Function: “Input”
//////////////////////////////////////////////////////////////////////////////////////////////////////
bool CGameOverState::Input(void)
{
	if(m_pDI->GetInstance()->KeyPressed(DIK_ESCAPE) || m_pDI->JoystickButtonPressed(8, 0) || m_pDI->JoystickButtonPressed(2, 0))
	{
		CStackStateMachine::GetInstance()->ChangeState(CMainMenuState::GetInstance());
		return 1;
	}
	
	return 1;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////
// Function: “Update”
//////////////////////////////////////////////////////////////////////////////////////////////////////
void CGameOverState::Update(float fElapsedTime)
{
	m_GameOverFont.Update( fElapsedTime );

	AtractMode( fElapsedTime );
}

//////////////////////////////////////////////////////////////////////////////////////////////////////
// Function: “Render”
//////////////////////////////////////////////////////////////////////////////////////////////////////
void CGameOverState::Render(void)
{
	m_pTM->Draw(m_nBackgroundID, 0, 0);

	m_GameOverFont.Draw( "GAME OVER. . .", 100, 250, 1.25f, D3DXCOLOR(0.7f, 0.7f, 1.0f, 1.0f) );

	m_GameOverFont.Draw( "Press Esc to Exit.", 240, 500, 0.5f, D3DXCOLOR(0.7f, 0.7f, 1.0f, 1.0f) );
}

//////////////////////////////////////////////////////////////////////////////////////////////////////
// Function: “Exit”
//////////////////////////////////////////////////////////////////////////////////////////////////////
void CGameOverState::Exit(void)
{
	if(m_nBackgroundID != -1)
	{
		m_pTM->UnloadTexture(m_nBackgroundID);
		m_nBackgroundID = -1;
	}

	if(m_pDS)
		m_pDS = NULL;

	if(m_pWM)
		m_pWM = NULL;

	if(m_pTM)
		m_pTM = NULL;

	if(m_pDI)
		m_pDI = NULL;
	
	if(m_pD3D)
		m_pD3D = NULL;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////
// Function: “GetInstance”
//////////////////////////////////////////////////////////////////////////////////////////////////////
CGameOverState* CGameOverState::GetInstance(void)
{
	if(!sm_pGameOverStateInstance)
	{
		sm_pGameOverStateInstance = new CGameOverState();
	}
	return sm_pGameOverStateInstance;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////
// Function: “DeleteInstance”
//////////////////////////////////////////////////////////////////////////////////////////////////////
void CGameOverState::DeleteInstance(void)
{
	if(sm_pGameOverStateInstance)
	{
		delete sm_pGameOverStateInstance;
		sm_pGameOverStateInstance = NULL;
	}
}