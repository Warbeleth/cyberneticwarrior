//////////////////////////////////////////////////////////////////////////////////////////////////////
// File: “CIdleEnemy.h”
//
// Author: Corey Ringer (CR)
//
// Purpose: This class serves as the base object for all enemies that have idle and active -
//			states to derive off of
//////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef IDLEENEMY_H_
#define IDLEENEMY_H_
#include "CBaseEnemy.h"

enum IdleStates { Idle = 0, iActive, iDead };


class CIdleEnemy : public CBaseEnemy
{
	int m_nState;

public:
	CIdleEnemy(void);
	CIdleEnemy(int nState, int nType, int nImageID, int nMaxHP, int nCurrentHP, 
			   int nSightRange, int nAttackRange, float fRateOfFire, 
			   float fSpeed, int PosX, int PosY, int Width, int Height);

	~CIdleEnemy(void);

	////////////////////////////////////////////////////////////////////////////////////
	//	Function : Update
	//
	//	Purpose : To update CBaseEnemy functionality.
	////////////////////////////////////////////////////////////////////////////////////
	virtual void Update(float fElapsedTime);

	////////////////////////////////////////////////////////////////////////////////////
	//	Function : Render
	//
	//	Purpose : To Render CBaseEnemy Objects to the Screen.
	////////////////////////////////////////////////////////////////////////////////////
	virtual void Render(void);

	////////////////////////////////////////////////////////////////////////////////////
	//	Function : ChangeAIState
	//
	//	Purpose : Changes the AI's current state based on update checks
	////////////////////////////////////////////////////////////////////////////////////
	void ChangeAIState(int nNewState);

	////////////////////////////////////////////////////////////////////////////////////
	//	Function : ReturnAIState
	//
	//	Purpose : Gets the current AI state
	////////////////////////////////////////////////////////////////////////////////////
	int ReturnAIState();
};

#endif