//////////////////////////////////////////////////////////////////////////////////////////////////////
//	File : CCamera.h
//
//	Author : Anthony Muccio / Corey Ringer / Patrick Alvarez 
//
//	Purpose : This header holds all the functionality that Cybernetic Warrior needs in a camera. It
//			  holds the methods to return a camera Offset and allows for scaling of the view itself.
//			  This class allows for world positions that would be offscreen to be displayed to the 
//			  screen.
//////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef CCAMERA_H_
#define CCAMERA_H_

//////////////////////////////////////////////////////////////////////////////////////////////////////
//						******************* CLASS - CCamera *******************
//////////////////////////////////////////////////////////////////////////////////////////////////////
class CCamera
{
	int m_nX;
	int m_nY;
	float m_fScale;

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function: “CCamera”
	//
	// Purpose: The default constructor for CCamera. Will initialize values.
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	CCamera( void );

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function: “~CCamera”
	//
	// Purpose: The destructor for CCamera. Will cleanup any memory and unload any loaded assets.
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	~CCamera( void );
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function: “CCamera”
	//
	// Purpose: The copy constructor for CCamera. Will have an empty body and not be used.
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	CCamera(CCamera&);
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function: “CCamera”
	//
	// Purpose: The assignment operator for CCamera. Will have an empty body and not be used.
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	CCamera& operator=(CCamera&);

	static CCamera* sm_pCameraInstance;

public:	
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function: “ZoomIn”
	//
	// Purpose: Increases the scale value of the map by 10 percent each call, maxing at 200%.
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	void ZoomIn( void ) { m_fScale += 0.1f; (m_fScale > 2) ? m_fScale = 2 : m_fScale = m_fScale;}
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function: “ZoomOut”
	//
	// Purpose: Decreases the scale value of the map by 10 percent each call, with a minimum of 10%.
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	void ZoomOut( void ) { m_fScale -= 0.1f; (m_fScale <= 0) ? m_fScale = 0.1f : m_fScale = m_fScale; }

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function: “GetInstance”
	//
	// Purpose: Returns a pointer to the instance of the CCamera or creates an instance to return if there
	//			isn't already one created.
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	static CCamera* GetInstance( void );
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function: “DeleteInstance”
	//
	// Purpose: Deletes the allocated memory for the instance of the CCamera.
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	static void DeleteInstance( void );
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function: Accessors
	// 
	// Purpose : Returns the specified type.
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	int GetOffsetX( void ) { return (int)(m_nX * m_fScale); }
	int GetOffsetY( void ) { return (int)(m_nY * m_fScale); }
	float GetScale( void ) { return m_fScale; }

	///////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function: Modifiers 
	// 
	// Purpose: Modifies the specified type. 
	///////////////////////////////////////////////////////////////////////////////////////////////////////
	void SetCameraOffsetX( int nOffsetX ) { m_nX = nOffsetX; }
	void SetCameraOffsetY( int nOffsetY ) { m_nY = nOffsetY; }
};
#endif